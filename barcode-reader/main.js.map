{"version":3,"file":"main.js","mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACXuD;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHAHlB,CAAC,iEAAoB,CAAC,MAAM,CAAC,CAAC,EAC7B,yDAAY;mIAEX,gBAAgB,oFAFjB,yDAAY;;;;;;;;;;;;;;;;;;;ACNiF;;;;;AAQlG,MAAM,YAAY;IAgBvB,YAAoB,OAAiC;QAAjC,YAAO,GAAP,OAAO,CAA0B;QAfrD,UAAK,GAAG,eAAe,CAAC;QAIxB,iBAAY,GAAW,EAAE,CAAC;QAE1B,YAAO,GAAG,KAAK,CAAC;QAIhB,+CAA+C;QAC/C,+CAA+C;QAE/C,UAAK,GAAG,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAC;IAGnE,CAAC;IAED,QAAQ;IACR,CAAC;IACD,eAAe;IAEf,CAAC;IAED,SAAS;QACP,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACpB,CAAC;IAGD,OAAO,CAAC,KAAU;QAChB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;;wEAjCU,YAAY;0GAAZ,YAAY;kEAEZ,yFAA0B;;;;;QCXvC,wEAAkB;QAChB,uDACF;QAAA,4DAAK;QAEL,yFAOC;QAJC,gMAAwB,uGAEX,mBAAe,IAFJ,qGAGT,eAAW,IAHF;QAIzB,4DAAsB;QAEvB,yEAAyB;QACvB,4EAAoC;QAA5B,uJAAwB,EAAE,IAAC;QAAC,gEAAK;QAAA,4DAAS;QACpD,4DAAM;QACN,2EAA+B;;QAf7B,0DACF;QADE,mGACF;QAIE,0DAAiE;QAAjE,wIAAiE;;;;;;;;;;;;;;;;;;;;;;ACNT;AAGF;AACT;AAE6B;;AAcrE,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;2GADb,EAAE,YALJ;YACP,oEAAa;YACb,iEAAgB;YAChB,sFAAuB;SACxB;mIAIU,SAAS,mBAVlB,wDAAY,aAGZ,oEAAa;QACb,iEAAgB;QAChB,sFAAuB;;;;;;;;;;;;;;;;ACf3B,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;;ACfvB;AAGF;AACY;AAEzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, ViewChild, AfterViewInit } from '@angular/core';\nimport { NgxBarcodeScannerComponent, NgxBarcodeScannerService } from '@eisberg-labs/ngx-barcode-scanner';\nimport { BarcodeScannerLivestreamComponent } from \"ngx-barcode-scanner\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements AfterViewInit {\n  title = 'BarcodeReader';\n  @ViewChild(NgxBarcodeScannerComponent)\n  barcodeScanner: NgxBarcodeScannerComponent;\n\n  barcodeValue: string = '';\n\n  isError = false;\n\n\n\n  //https://www.soundjay.com/buttons/beep-01a.mp3\n  //https://www.soundjay.com/buttons/button-3.mp3\n\n  audio = new Audio('https://www.soundjay.com/buttons/button-3.mp3');\n\n  constructor(private service: NgxBarcodeScannerService) {\n  }\n\n  ngOnInit() {\n  }\n  ngAfterViewInit() {\n\n  }\n\n  playSound() {\n    this.audio.play();\n  }\n\n\n  onError(error: any) {\n    console.error(error);\n    this.isError = true;\n  }\n}\n","<h1 class=\"label\">\n  Value {{ barcodeValue }}\n</h1>\n\n<ngx-barcode-scanner\n  class=\"cameraWindow\"\n  [codes]=\"['code_39', 'code_128', 'ean', 'upc', 'upc_e', 'ean_8']\"\n  [(value)]=\"barcodeValue\"\n  [errorThreshold]=\"0.1\"\n  (exception)=\"onError($event)\"\n  (valueChange)=\"playSound()\"\n></ngx-barcode-scanner>\n\n<div class=\"clearButton\">\n  <button (click)=\"barcodeValue = ''\">Clear</button>\n</div>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { NgxBarcodeScannerModule } from \"@eisberg-labs/ngx-barcode-scanner\";\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgxBarcodeScannerModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}